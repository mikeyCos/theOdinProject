// https://en.wikipedia.org/wiki/Fibonacci_sequence
// https://projecteuler.net/problem=2
// Each new term in the Fibonacci sequence is generated by adding the previous two terms.
// By starting with 1 and 2, the first 10 terms will be:
// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89...
// By considering the terms in the Fibonacci sequence whose values do not exceed n
// Find the sum of the even-valued terms.
// fibsEven(10) should return 10
// fibsEven(60) should return 44
export default function fibsEven(n) {
  // if (n < 0) return 'Enter a positive integer';
  // if (n === 0) return 2;
  // if (n === 1) return 8;
  // return 4 * fibonacciEven(n - 1) + fibonacciEven(n - 2);
  // ------------------------
  // non-recursive
  // let a = 1, let b = 2
  // let sum = 0
  // while a + b < n
  //  if a + b % 2 === 0
  //    add a + b to sum value
  let a = 1;
  let b = 2;
  let sum = b;

  while (b <= n) {
    const tmp = a + b;
    a = b;
    b = tmp;
    if (tmp % 2 === 0) sum += tmp;
    console.log(sum);
  }
  return sum;
  // ------------------------
  // recursive
}
